version: '3.8'

services:
  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    environment:
      DB_SQLITE_FILE: ""  # ← CRITICAL: Disable SQLite, force MySQL
      DB_MYSQL_HOST: "npm-db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npm"
      DB_MYSQL_PASSWORD: "${NPM_DB_PASSWORD}"
      DB_MYSQL_NAME: "npm"
      DISABLE_IPV6: 'true'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    networks:
      proxy-network:
        ipv4_address: 172.20.0.10
      npm-internal:
    depends_on:
      npm-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/bin/check-health"]
      interval: 10s
      timeout: 3s
      retries: 3
      # start_period: 90s  # ← Give it 90 seconds to start

  npm-db:
    image: 'jc21/mariadb-aria:latest'
    container_name: npm-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "${NPM_ROOT_PASSWORD}"
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: "${NPM_DB_PASSWORD}"
      MARIADB_AUTO_UPGRADE: '1'
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - npm-internal
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${NPM_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      # start_period: 30s  # ← Give it 30 seconds to start

networks:
  proxy-network:
    name: proxy-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
    labels:
      com.devsecops.description: "Shared network for reverse proxy"
      com.devsecops.managed-by: "nginx-proxy-manager"
  
  npm-internal:
    driver: bridge